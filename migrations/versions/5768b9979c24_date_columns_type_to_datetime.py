"""date columns type to datetime

Revision ID: 5768b9979c24
Revises: a0aac7c3bc43
Create Date: 2025-05-25 20:50:58.011261

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '5768b9979c24'
down_revision: Union[str, None] = 'a0aac7c3bc43'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('tb_item', schema=None) as batch_op:
        batch_op.alter_column('update_date',
               existing_type=sa.FLOAT(),
               type_=sa.DateTime(),
               existing_nullable=False,
               existing_server_default=sa.text('(CURRENT_TIMESTAMP)'))
        batch_op.alter_column('creation_date',
               existing_type=sa.FLOAT(),
               type_=sa.DateTime(),
               existing_nullable=False,
               existing_server_default=sa.text('(CURRENT_TIMESTAMP)'))

    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('tb_item', schema=None) as batch_op:
        batch_op.alter_column('creation_date',
               existing_type=sa.DateTime(),
               type_=sa.FLOAT(),
               existing_nullable=False,
               existing_server_default=sa.text('(CURRENT_TIMESTAMP)'))
        batch_op.alter_column('update_date',
               existing_type=sa.DateTime(),
               type_=sa.FLOAT(),
               existing_nullable=False,
               existing_server_default=sa.text('(CURRENT_TIMESTAMP)'))

    # ### end Alembic commands ###
